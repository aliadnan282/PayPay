apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply from: "$rootDir/versions.gradle"

android {
    compileSdkVersion compileSdkV

    defaultConfig {
        applicationId "com.starter"
        minSdkVersion minSdkV
        targetSdkVersion targetSdk
        versionCode versionCode
        versionName versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // support library
    implementation "androidx.core:core-ktx:$kotlin_core"
    implementation "androidx.annotation:annotation:1.2.0"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // UI library

    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.google.android.material:material:$google_material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Lifecycle, ViewModel
    implementation "androidx.fragment:fragment-ktx:$fragment_test"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter_version"


    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_androidx_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logger_version"

    // Async threading
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"


    // Core Test
    androidTestImplementation "androidx.test:core:$core_test"
    androidTestImplementation "androidx.test:rules:$rules_test"
    androidTestImplementation "android.arch.core:core-testing:$arch_core_test"
    androidTestImplementation "androidx.test.ext:junit:$jnit_ext_test_version"

    // UI Testing
    kaptAndroidTest "com.android.databinding:compiler:$databinding_test"
    androidTestImplementation "androidx.fragment:fragment-testing:$fragment_test"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_core"
    debugImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_core"
}